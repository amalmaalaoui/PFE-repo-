"""change_sheet_names_to_text

Revision ID: 9f56aeb8b6bf
Revises:
Create Date: 2025-04-26 00:02:27.203936

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "9f56aeb8b6bf"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_files", schema=None) as batch_op:
        batch_op.alter_column(
            "filepath",
            existing_type=mysql.VARCHAR(length=255),
            type_=sa.String(length=500),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "size", existing_type=mysql.INTEGER(display_width=11), nullable=False
        )
        batch_op.alter_column(
            "sheet_count", existing_type=mysql.INTEGER(display_width=11), nullable=False
        )
        batch_op.alter_column(
            "file_type",
            existing_type=mysql.VARCHAR(length=50),
            type_=sa.Enum("SOURCE", "TARGET", "MIGRATION", name="filetype"),
            nullable=False,
        )
        batch_op.alter_column(
            "sheet_names",
            existing_type=mysql.TEXT(),
            type_=mysql.TEXT(),
            existing_nullable=True,
        )

        batch_op.create_index(
            batch_op.f("ix_user_files_upload_date"), ["upload_date"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_files_user_id"), ["user_id"], unique=False
        )

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.alter_column(
            "password_hash",
            existing_type=mysql.VARCHAR(length=128),
            type_=sa.String(length=256),
            nullable=False,
        )
        batch_op.drop_index("email")
        batch_op.drop_index("username")
        batch_op.create_index(
            batch_op.f("ix_users_created_at"), ["created_at"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_users_email"), ["email"], unique=True)
        batch_op.create_index(
            batch_op.f("ix_users_username"), ["username"], unique=True
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_username"))
        batch_op.drop_index(batch_op.f("ix_users_email"))
        batch_op.drop_index(batch_op.f("ix_users_created_at"))
        batch_op.create_index("username", ["username"], unique=True)
        batch_op.create_index("email", ["email"], unique=True)
        batch_op.alter_column(
            "password_hash",
            existing_type=sa.String(length=256),
            type_=mysql.VARCHAR(length=128),
            nullable=True,
        )

    with op.batch_alter_table("user_files", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_files_user_id"))
        batch_op.drop_index(batch_op.f("ix_user_files_upload_date"))
        batch_op.alter_column(
            "sheet_names",
            existing_type=sa.Text(),
            type_=sa.Text(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "file_type",
            existing_type=sa.Enum("SOURCE", "TARGET", "MIGRATION", name="filetype"),
            type_=mysql.VARCHAR(length=50),
            nullable=True,
        )
        batch_op.alter_column(
            "sheet_count", existing_type=mysql.INTEGER(display_width=11), nullable=True
        )
        batch_op.alter_column(
            "size", existing_type=mysql.INTEGER(display_width=11), nullable=True
        )
        batch_op.alter_column(
            "filepath",
            existing_type=sa.String(length=500),
            type_=mysql.VARCHAR(length=255),
            existing_nullable=False,
        )

    # ### end Alembic commands ###
